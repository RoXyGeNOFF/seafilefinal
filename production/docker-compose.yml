version: '3.9'
services:
  db:
    image: mariadb:10.11
    container_name: seafile-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_LOG_CONSOLE=true
      - MARIADB_AUTO_UPGRADE=1
    command: ["--character-set-server=utf8mb4","--collation-server=utf8mb4_unicode_ci","--transaction-isolation=READ-COMMITTED","--binlog-format=ROW"]
    volumes:
      - ${SEAFILE_MYSQL_VOLUME}:/var/lib/mysql
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: seafile-redis
    command: ["redis-server","--requirepass","${REDIS_PASSWORD}"]
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.23
    container_name: seafile-es
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ${SEAFILE_VOLUME}/esdata:/usr/share/elasticsearch/data
    restart: unless-stopped

  seafile:
    image: docker.io/seafileltd/seafile-mc:12.0.14  # https://hub.docker.com/r/seafileltd/seafile-mc
    container_name: seafile
    depends_on: [ db, redis, elasticsearch ]
    environment:
      - SEAFILE_MYSQL_DB_HOST=db
      - SEAFILE_MYSQL_DB_PORT=3306
      - SEAFILE_MYSQL_DB_USER=seafile
      - SEAFILE_MYSQL_DB_PASSWORD=${SEAFILE_DB_PASSWORD}
      - SEAFILE_MYSQL_DB_CCNET_DB_NAME=ccnet_db
      - SEAFILE_MYSQL_DB_SEAFILE_DB_NAME=seafile_db
      - SEAFILE_MYSQL_DB_SEAHUB_DB_NAME=seahub_db
      - CACHE_PROVIDER=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SEARCH_SERVERS=elasticsearch:9200
      - JWT_PRIVATE_KEY=${JWT_PRIVATE_KEY}
      - SEAFILE_SERVER_HOSTNAME=${DOMAIN}
      - SEAFILE_SERVER_PROTOCOL=https
      - TIME_ZONE=${TIME_ZONE}
      - INIT_SEAFILE_ADMIN_EMAIL=${INIT_SEAFILE_ADMIN_EMAIL}
      - INIT_SEAFILE_ADMIN_PASSWORD=${INIT_SEAFILE_ADMIN_PASSWORD}
    volumes:
      - ${SEAFILE_VOLUME}:/shared
    restart: unless-stopped

  nginx:
    image: nginx:1.27
    container_name: seafile-nginx
    depends_on: [ seafile ]
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"
    volumes:
      - ./nginx/seafile.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ${SEAFILE_VOLUME}:/shared:ro
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: seafile-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h & wait $${!}; done'"
    restart: unless-stopped